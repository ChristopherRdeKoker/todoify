generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model account_user {
  id                              Int                 @id @default(autoincrement())
  name                            String              @db.VarChar(255)
  username                        String              @unique
  password                        String
  is_parent                       Boolean?
  account_user_role               account_user_role[]
  created_to_do_items_created_by  to_do_item[]        @relation("CreatedBy")
  created_to_do_items_created_for to_do_item[]        @relation("CreatedFor")
}

model to_do_item {
  id            Int          @id @default(autoincrement())
  title         String       @db.VarChar(255)
  is_complete   Boolean
  is_urgent     Boolean
  created_by    Int
  created_for   Int
  created_on    DateTime     @default(now())
  finished_at   DateTime?
  is_repeatable Boolean
  days_array    Int[]
  unlock_time   Int?
  createdBy     account_user @relation("CreatedBy", fields: [created_by], references: [id])
  createdFor    account_user @relation("CreatedFor", fields: [created_for], references: [id])
}

model account_role {
  id                Int                 @id @default(autoincrement())
  role              String
  account_user_role account_user_role[]
}

model account_user_role {
  id              Int          @id @default(autoincrement())
  account_user_id Int
  account_role_id Int
  account_role    account_role @relation(fields: [account_role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  account_user    account_user @relation(fields: [account_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
