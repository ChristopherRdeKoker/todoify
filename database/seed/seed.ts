import { PrismaClient, account_user } from "@prisma/client";

const prisma = new PrismaClient();

const account_user_data: account_user[] = [
  {
    id: 1,
    username: "Jack",
    name: "Chris",
    password: "12345",
    is_parent: true,

    // Add other field values as needed
  },
  // Add more objects for additional seed data
];

async function seed() {
  try {
    await prisma.account_user.createMany({
      data: account_user_data,
    });
    console.log("Data seeded successfully!");
  } catch (error) {
    console.error("Error seeding data:", error);
  } finally {
    await prisma.$disconnect();
  }
}

seed();

// INSERT INTO account_user (name, username, password, is_parent) VALUES
// ('Chris', 'Chris', '123456', TRUE),
// ('Kelly', 'Kelly', '123456', TRUE),
// ('Troy', 'Troy', '6265', FALSE);

// insert into account_role (id, "role") values (1, 'admin'),(2, 'parent');

// insert into account_user_role (id, account_user_id, account_role_id) values
// (1, 1, 1),
// (2, 1, 2),
// (3, 2,2);
// create table account_user_role (id int primary key generated by default as identity, account_user_id int not null references account_user(id) on delete cascade,
// account_role_id int not null references account_role(id) on delete cascade);
